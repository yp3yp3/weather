name: Python application

on:
  push:
    branches: [ "dev" ]
  pull_request:
    types: [closed]
env:
  IMAGE_NAME: yp3yp3/weather
  CD_REPO: yp3yp3/weather-CD 
  USER_NAME: yp3yp3
  EMAIL: yp3yp3@gmail.com
jobs:
  
  build-and-deploy-stage:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Modify the deployment in the CD repo
        with:
          repository: ${{ env.CD_REPO }}
          token: ${{ secrets.GIT_PASSWORD }}
      
      - name: Read current version from values-test.yaml
        id: get_version
        run: |
          VERSION=$(grep 'tag:' values-test.yaml | awk '{print $2}')
          NEW_VERSION=$((VERSION + 1))
          echo "IMAGE_VERSION=$NEW_VERSION" >> $GITHUB_ENV          
          
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.IMAGE_NAME }}:latest, ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: true  
      - name: save commit message for CD repo
        run: |
          commitMessage=$(git log -1 --pretty=format:%s)
          commitHash=$(git rev-parse --short HEAD)
          echo COMMIT=${{ env.IMAGE_VERSION }}-${{ github.ref }}-${commitMessage}-${commitHash} >> $GITHUB_ENV
      - uses: actions/checkout@v3
        name: Modify the deployment in the CD repo
        with:
          repository: ${{ env.CD_REPO }}
          token: ${{ secrets.GIT_PASSWORD }}
      - name: Update the test environment with new image
        run: |
          git config --global user.name "${{ env.USER_NAME }}"
          git config --global user.email "${{ env.EMAIL }}"
          sed -i "s|tag:.*\$|tag: ${{ env.IMAGE_VERSION }}|g" values-test.yaml
          git add -A
          git commit -m "Update Test environment to image version ${{ env.IMAGE_VERSION }}"
          git push

  create-merge-request:
    if: github.event_name == 'push'
    needs: build-and-deploy-stage
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Create pull request
        run: |
          gh pr create -B main -H dev --title "Merge dev to main" --body "Merging tested version from dev to main. Image version: ${{ env.IMAGE_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

