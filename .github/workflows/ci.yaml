name: Python application

on:
  push:
    branches: [ "dev" ]
    pull_request:
        types: [closed]
env:
  IMAGE_NAME: yp3yp3/weather
  CD_REPO: yp3yp3/weather-CD 
  USER_NAME: yp3yp3
  EMAIL: yp3yp3@gmail.com
jobs:
  build-and-deploy-stage:
    runs-on: ubuntu-latest
    steps:
    
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.IMAGE_NAME }}:latest, ${{ env.IMAGE_NAME }}:${{ github.run_number }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: true  
      - name: save commit message for CD repo
        run: |
          commitMessage=$(git log -1 --pretty=format:%s)
          commitHash=$(git rev-parse --short HEAD)
          echo COMMIT=${{ github.run_number }}-${{ github.ref }}-${commitMessage}-${commitHash} >> $GITHUB_ENV
      - uses: actions/checkout@v3
        name: Modify the deployment in the CD repo
        with:
          repository: ${{ env.CD_REPO }}
          token: ${{ secrets.GIT_PASSWORD }}
      - name: Update the test environment with new image
        run: |
          git config --global user.name "${{ env.USER_NAME }}"
          git config --global user.email "${{ env.EMAIL }}"
          sed -i "s|tag:.*\$|tag: ${{ github.run_number }}|g" values-test.yaml
          git add -A
          git commit -m "Update Test environment to image version ${{ github.run_number }}"
          git push

  create-merge-request:
    needs: build-and-deploy-stage
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: create pull request
        run: gh pr create -B main -H dev --title 'Merge dev to main' --body 'Merging tested version from dev to main. Image version: ${{ github.run_number }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          


  update-production-on-main-change:
    needs: create-merge-request
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Get image version from PR label
        id: get_version
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          LABEL=$(gh pr view $PR_NUMBER --json labels -q '.labels[] | select(.name | startswith("image-version-")) | .name' || echo "")
          VERSION=$(echo $LABEL | sed 's/image-version-//g')
          echo "IMAGE_VERSION=$VERSION" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        name: Update production deployment in CD repo
        with:
          repository: ${{ env.CD_REPO }}
          token: ${{ secrets.GIT_PASSWORD }}

      - name: Update production environment with new image
        run: |
          git config --global user.name "${{ env.USER_NAME }}"
          git config --global user.email "${{ env.EMAIL }}"
          sed -i "s|tag:.*\$|tag: ${{ github.run_number }}|g" values-prod.yaml
          git add -A
          git commit -m "Update Production environment to image version ${{ env.IMAGE_VERSION }}"
          git push             
